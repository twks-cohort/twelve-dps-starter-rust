---
version: 2.1

orbs:
  rust: twks-cohort/rust-api@1.0.0
  cosign: twdps/cosign@0.1.0
  kube: twdps/kube-ops@0.3.0
  op: twdps/onepassword@1.0.0


# ==== global pipeline parameters 

parameters:
  context:
    description: circleci context for all jobs
    type: string
    default: twdps-core-labs-team
  shell-options:
    description: shell options for all jobs
    type: string
    default: op run --env-file op.env -- /bin/bash -eo pipefail
  registry:
    description: publish to this registry
    type: string
    default: ghcr.io/twks-cohort
  executor-image:
    description: image to use for local jobs
    type: string
    default: twdps/circleci-kube-ops:alpine-0.7.0

# ==== triggers 

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

commands:
  set-environment:
    description: generate environment credentials and configuration from templates
    parameters:
      cluster:
        description: cluster environment
        type: string
      source-env:
        description: .env file to source into BASH_ENV
        type: string
    steps:
      - op/env:
          env-file: << parameters.source-env >>
  set-kubeconfig:
    parameters:
      cluster:
        description: cluster to configure
        type: string
    steps:
      - run:
          name: setup kubeconfig
          command: |
            mkdir -p ~/.kube
            ENV=<< parameters.cluster >> op inject -i tpl/kubeconfig.tpl -o ~/.kube/config


workflows:
  version: 2

  development-build:
    jobs:
      - rust/secure-image-build:
          name: secure-build
          context: << pipeline.parameters.context >>
          shell: /bin/bash
          before-build:
            - run:
                name: inject environment variables
                command: |
                  op inject -i op.env -o $BASH_ENV
                  source $BASH_ENV
                  op inject -i cosign.key.env -o cosign.key
                  op inject -i cosign.pub.env -o cosign.pub
          registry: << pipeline.parameters.registry >>
          image: twelve-lab-basic-bot
          image-cve-scan: false
          skip-base-image: true
          snyk-organization: twdps
          port-definition: "8000:8000"
          after-push:
            - cosign/install
            - cosign/sign:
                registry: << pipeline.parameters.registry >>
                image: twelve-lab-basic-bot
                tag: dev.${CIRCLE_SHA1:0:7}
          filters: *on-push-main

  development-deploy-wip:
    jobs:
      - deploy:
          context: << pipeline.parameters.context >>
          shell:  op run --env-file op.nonprod.env -- /bin/bash -eo pipefail
          name: Deploy to Dev Namespace
          cluster: prod-us-east-1
          environment: dev
          source-env: op.nonprod.env

jobs:
  deploy:
    docker:
      - image: << pipeline.parameters.executor-image >>
    shell: << parameters.shell >>
    parameters:
      shell:
        description: shell option directive
        type: string
        default: /bin/bash -eo pipefail
      cluster:
        description: target kubernetes cluster
        type: string
      environment:
        description: values environment to use
        type: string
      source-env:
        description: .env file to source into BASH_ENV
        type: string
    steps:
      - checkout
      - set-environment:
          cluster: << parameters.cluster >>
          source-env: << parameters.source-env >>
      - set-kubeconfig:
          cluster: << parameters.cluster >>
      - run:
          name: Deploy via Helm
          command: |
            helm upgrade \
            --install \
            --namespace twdps-core-labs-team-<< parameters.environment >> \
            --values deployment/values-<< parameters.environment >>.yaml \
            --cleanup-on-fail \
            --atomic \
            basic-bot \
            ./chart
